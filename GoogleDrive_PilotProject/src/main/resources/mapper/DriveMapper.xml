<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.drive.repository.IDriveRepository">
	<!-- String getDirPath(String dirId); -->
	<select id="getDirPath" parameterType="String" resultType="string">
	<![CDATA[
		SELECT 
			DIRECTORY			AS "directory"
		FROM DIR_PATH
		WHERE DIR_ID=#{dirId}
	]]>
	</select>
	
	<!-- List<DirPath> getHomeOfMember(int memberid);
		/drive/home 계층형 쿼리 -->
	<select id="getHomeOfMember" parameterType="string" resultType="map">
    <![CDATA[
        SELECT 
		    dir_id AS "dirId",
		    member_id AS "memberId",
		    parent_dir_id AS "parentDirId",
		    directory AS "directory",
		    is_folder AS "isFolder",
		     create_date AS "createDate",
		     modify_date AS "modifyDate",
		     content_type AS "contentType",
		     file_size AS "fileSize",
		     file_name AS "fileName",
		     level
		FROM dir_path
		WHERE member_id = #{memberId} AND level < 3 
		START WITH parent_dir_id IS NULL
		CONNECT BY PRIOR dir_id = parent_dir_id
		ORDER BY dir_id
    ]]>
	</select>
	
	<!-- List<DirPath> getSubDirectory(String parentdirid);
		/drive/getsub 계층형 쿼리(계층형으로 안해도 되긴 함) -->
	<select id="getSubDirectory" parameterType="string" resultType="map"> <!-- map 으로 한 이유는 계층 쿼리 level 을 같이 보려고 -->
    <![CDATA[
		SELECT 
		     dir_id AS "dirId",
		    member_id AS "memberId",
		    parent_dir_id AS "parentDirId",
		    directory AS "directory",
		    is_folder AS "isFolder",
		     create_date AS "createDate",
		     modify_date AS "modifyDate",
		     content_type AS "contentType",
		     file_size AS "fileSize",
		     file_name AS "fileName",
		     level
		FROM dir_path
		WHERE level < 2 
		START WITH parent_dir_id = #{dirId}
		CONNECT BY PRIOR dir_id = parent_dir_id
		ORDER BY dir_id
    ]]>
	</select>
	
	<!-- String isFolder(String dirId); -->
	<select id="isFolder" parameterType="string" resultType="string"> <!-- map 으로 한 이유는 계층 쿼리 level 을 같이 보려고 -->
    <![CDATA[
		SELECT 
		     is_folder as "isFolder"
		FROM dir_path
		WHERE dir_id = #{dirId}
    ]]>
	</select>
	
	<!-- DirPath getDirPathVo(String dirId);
		/drive/downloadFile -->
	<select id="getDirPathVo" parameterType="string" resultType="com.example.demo.drive.model.DirPath"> <!-- map 으로 한 이유는 계층 쿼리 level 을 같이 보려고 -->
    <![CDATA[
		SELECT 
		     dir_id AS "dirId",
		    member_id AS "memberId",
		    parent_dir_id AS "parentDirId",
		    directory AS "directory",
		    is_folder AS "isFolder",
		     create_date AS "createDate",
		     modify_date AS "modifyDate",
		     content_type AS "contentType",
		     file_size AS "fileSize",
		     file_name AS "fileName"
		FROM dir_path
		WHERE dir_id = #{dirId}
    ]]>
	</select>
	
<!-- 완승좌 -->
<!-- 완승 -->
	<select id="getDirectoryByDirId" parameterType="String" resultType="String">
		SELECT DIRECTORY FROM DIR_PATH WHERE DIR_ID=#{parentDirId}
	</select>
	
	<insert id="makeFolder" >
		INSERT INTO DIR_PATH (DIR_ID, MEMBER_ID, PARENT_DIR_ID, DIRECTORY, CREATE_DATE, MODIFY_DATE, CONTENT_TYPE, FILE_SIZE, FILE_NAME, IS_FOLDER)
		VALUES(#{dirId},#{memberId},#{parentDirId},#{directory},#{createDate},#{modifyDate},#{contentType},#{fileSize},#{fileName},#{isFolder})
	</insert>
	
	<insert id="uploadFile" >
		INSERT INTO DIR_PATH (DIR_ID, MEMBER_ID, PARENT_DIR_ID, DIRECTORY, CREATE_DATE, MODIFY_DATE, CONTENT_TYPE, FILE_SIZE, FILE_NAME, IS_FOLDER)
		VALUES(#{dirId},#{memberId},#{parentDirId},#{directory},#{createDate},#{modifyDate},#{contentType},#{fileSize},#{fileName},#{isFolder})
	</insert>
	
	<delete id="deleteFileCascade">
		DELETE DIR_PATH WHERE MEMBER_ID=#{memberId} AND PARENT_DIR_ID=#{parentDirId} AND FILE_NAME=#{fileName}
	</delete>
	
<!-- String getMemberIdByDirId(String dirId); -->
	<select id="getMemberIdByDirId" parameterType="String" resultType="String">
		SELECT MEMBER_ID
		FROM DIR_PATH
		WHERE DIR_ID=#{dirId}
	</select>
	
<!--  
	<select id="getFile" parameterType="int" resultType="string">
	<![CDATA[
		SELECT 
			file_id				AS "fileId", 
			board_id			AS "boardId", 
			file_name			AS "fileName", 
			file_size			AS "fileSize", 
			file_content_type	AS "fileContentType", 
			file_data 			AS "fileData"
		FROM board_upload_file 
		WHERE file_id=#{fileId}
	]]>
	</select>
-->

<!--  
	<select id="selectArticleListByCategory" parameterType="hashmap" resultType="com.example.demo.drive.model.DirPath">
	<![CDATA[
		SELECT 
			board_id 		AS "boardId", 
			category_id 	AS "categoryId", 
			writer			AS "writer", 
			email			AS "email", 
			title			AS "title", 
			write_date		AS "writeDate", 
			master_id 		AS "masterId", 
			reply_number 	AS "replyNumber", 
			reply_step		AS "replyStep", 
			read_count		AS "readCount"
		FROM (
			SELECT 
				board_id, category_id, writer, email, title, write_date, 
				master_id, reply_number, reply_step, read_count, 
				rownum AS rnum
			FROM (
				SELECT * FROM board
				WHERE category_id=#{categoryId}
				ORDER BY master_id DESC, reply_number, reply_step
			)
		)
		WHERE rnum BETWEEN #{start} AND #{end}
	]]>
	</select>
-->
	
<!-- 	<select id="selectArticleListByCategory" parameterType="hashmap" resultType="com.example.myapp.board.model.Board">
	<![CDATA[
	SELECT 
	    board_id 				AS "boardId", 
	    category_id 			AS "categoryId", 
	    writer					AS "writer", 
	    email					AS "email", 
	    title					AS "title", 
	    write_date				AS "writeDate", 
	    master_id 				AS "masterId", 
	    reply_number 			AS "replyNumber", 
	    reply_step				AS "replyStep", 
	    read_count				AS "readCount"
	FROM board
	WHERE category_id=#{categoryId}
	ORDER BY master_id DESC, reply_number, reply_step
	OFFSET #{start}-1 ROWS
	FETCH FIRST 10 ROWS ONLY
	]]>
	</select> -->

<!--  
	<select id="selectArticle" parameterType="int" resultType="com.example.myapp.board.model.Board">
	<![CDATA[
		SELECT 
			board.board_id				AS "boardId", 
			category_id					AS "categoryId", 
			writer						AS "writer", 
			email						AS "email", 
			title						AS "title", 
			content						AS "content", 
			read_count					AS "readCount", 
			write_date					AS "writeDate", 
			master_id					AS "masterId", 
			reply_number				AS "replyNumber", 
			reply_step					AS "replyStep", 
			board_upload_file.file_id		AS "fileId", 
			board_upload_file.file_name		AS "fileName", 
			board_upload_file.file_size		AS "fileSize",
			board_upload_file.file_content_type	AS "fileContentType"
		FROM board LEFT OUTER JOIN board_upload_file 
			ON board.board_id=board_upload_file.board_id 
		WHERE board.board_id=#{boardId}
	]]>
	</select>
-->

<!-- 
	<update id="updateReadCount" parameterType="int">
	<![CDATA[
		UPDATE board 
		SET read_count = read_count+1 
		WHERE board_id=#{boardId}
	]]>
	</update>
	
	<select id="selectMaxArticleNo" parameterType="int" resultType="int">
	<![CDATA[
		SELECT NVL(MAX(board_id),0) AS "articleNo"
		FROM board
	]]>
	</select>

	<select id="selectMaxFileId" parameterType="int" resultType="int">
	<![CDATA[
		SELECT NVL(MAX(file_id),0) AS "fileId"
		FROM board_upload_file
	]]>
	</select>
		
	<insert id="insertArticle" parameterType="com.example.myapp.board.model.Board">
	<![CDATA[
		INSERT INTO board 
			(board_id, category_id, writer, email, password, title, content, write_date, master_id, reply_number, reply_step)  
		VALUES 
			(#{boardId}, #{categoryId}, #{writer}, #{email}, #{password}, #{title}, #{content}, SYSDATE, #{boardId}, 0, 0)
	]]>
	</insert>
	
	<insert id="insertFileData" parameterType="com.example.myapp.board.model.BoardUploadFile">
	<![CDATA[
		INSERT INTO board_upload_file 
			(file_id, board_id, file_name, file_size, file_content_type, file_data) 
		VALUES 
			(#{fileId}, #{boardId}, #{fileName}, #{fileSize}, #{fileContentType}, #{fileData})
	]]>
	</insert>
	
	<select id="getFile" parameterType="int" resultType="com.example.myapp.board.model.BoardUploadFile">
	<![CDATA[
		SELECT 
			file_id				AS "fileId", 
			board_id			AS "boardId", 
			file_name			AS "fileName", 
			file_size			AS "fileSize", 
			file_content_type	AS "fileContentType", 
			file_data 			AS "fileData"
		FROM board_upload_file 
		WHERE file_id=#{fileId}
	]]>
	</select>

	<insert id="updateReplyNumber" parameterType="hashmap">
	<![CDATA[
		UPDATE 
			board 
		SET 
			reply_number = reply_number + 1 
		WHERE 
			master_id = #{masterId} AND reply_number > #{replyNumber}
	]]>
	</insert>

	<insert id="replyArticle" parameterType="com.example.myapp.board.model.Board">
	<![CDATA[
		INSERT INTO board 
			(board_id, category_id, writer, email, password, title, content, write_date, master_id, reply_number, reply_step)  
		VALUES 
			(#{boardId}, #{categoryId}, #{writer}, #{email}, #{password}, #{title}, #{content}, SYSDATE, #{masterId}, #{replyNumber}, #{replyStep})
	]]>
	</insert>
		
	<select id="getPassword" parameterType="int" resultType="string">
	<![CDATA[
		SELECT password 
		FROM board 
		WHERE board_id=#{boardId}
	]]>
	</select>
	
	<update id="updateArticle" parameterType="com.example.myapp.board.model.Board">
	<![CDATA[
		UPDATE board 
		SET 
			category_id=#{categoryId}, writer=#{writer}, 
			email=#{email}, title=#{title}, 
			content=#{content}, write_date=SYSDATE 
		WHERE board_id=#{boardId}
	]]>
	</update>

	<update id="updateFileData" parameterType="com.example.myapp.board.model.BoardUploadFile">
	<![CDATA[
	 	UPDATE board_upload_file 
	 	SET 
	 		file_name=#{fileName}, file_size=#{fileSize}, 
			file_content_type=#{fileContentType}, file_data=#{fileData} 
	 	WHERE file_id=#{fileId}
	]]>
	</update>
	
	<select id="selectDeleteArticle" parameterType="int" resultType="com.example.myapp.board.model.Board">
	<![CDATA[
		SELECT 
			category_id		AS "categoryId", 
			master_id		AS "masterId", 
			reply_number	AS "replyNumber"
		FROM board
		WHERE board_id = #{boardId}
	]]>
	</select>
	
	<delete id="deleteFileData" parameterType="int">
	<![CDATA[
		DELETE FROM board_upload_file 
		WHERE EXISTS (SELECT board_id FROM board 
					  WHERE board.board_id=#{boardId} 
					  AND board.board_id=board_upload_file.board_id)
	]]>
	</delete>

	<delete id="deleteReplyFileData" parameterType="int">
	<![CDATA[
		DELETE FROM board_upload_file 
		WHERE EXISTS (SELECT board_id FROM board  
					  WHERE board.master_id=#{boardId} 
					  AND board.board_id=board_upload_file.board_id)
	]]>
	</delete>

	<delete id="deleteArticleByBoardId" parameterType="int">
		DELETE FROM board 
		WHERE board_id=#{boardId}
	</delete>

	<delete id="deleteArticleByMasterId" parameterType="int">
		DELETE FROM board 
		WHERE master_id=#{boardId}
	</delete>
	
	<select id="selectTotalArticleCount" resultType="int">
	<![CDATA[
		SELECT COUNT(board_id) AS "count" FROM board
	]]>
	</select>
	
	<select id="selectTotalArticleCountByCategoryId" parameterType="int" resultType="int">
	<![CDATA[
		SELECT COUNT(board_id) AS "count"
		FROM board 
		WHERE category_id=#{categoryId}	
	]]>
	</select>
	
	<select id="selectTotalArticleCountByKeyword" parameterType="string" resultType="int">
	<![CDATA[
		SELECT COUNT(*) FROM board
		WHERE title LIKE #{keyword} OR content LIKE #{keyword}
	]]>
	</select> 

	<select id="searchListByContentKeyword" parameterType="hashmap" resultType="com.example.myapp.board.model.Board">
	<![CDATA[
		SELECT 
			board_id 			AS "boardId", 
			category_id 		AS "categoryId", 
			writer				AS "writer", 
			email				AS "email", 
			title				AS "title", 
			write_date			AS "writeDate", 
			master_id 			AS "masterId", 
			reply_number 		AS "replyNumber", 
			reply_step			AS "replyStep", 
			read_count			AS "readCount"
	    FROM (
	    	SELECT 
	    		board_id, 
	    		category_id, 
	    		writer, 
	    		email, 
	    		title, 
	    		write_date, 
	    		master_id, 
	    		reply_number, 
	    		reply_step, 
	    		read_count, 
	    		rownum AS rnum
	    	FROM (
	    		SELECT * FROM board
	    		WHERE
	    			title LIKE #{keyword}
		    		OR 
		    		content LIKE #{keyword}
	    		ORDER BY master_id DESC, reply_number, reply_step
	    	)
	    )
	    WHERE rnum BETWEEN #{start} AND #{end}
	]]>
	</select>
	
	-->
</mapper>